{"version":3,"file":"ChartMultiLine.stories-bdf7b308.js","sources":["../../src/components/ChartMultiLine/Line/Line.vue","../../src/components/ChartMultiLine/ChartMultiLine.vue"],"sourcesContent":["<!-- eslint-disable linebreak-style -->\r\n<template>\r\n  <div class=\"chart\" :style=\"{ backgroundImage: svgChart }\" ref=\"chart\">\r\n    <div v-for=\"({ value }, index) in data\" :key=\"index + Math.random() * 100\" class=\"group\">\r\n      <div\r\n        :style=\"{\r\n          transform: `translateY(-${(value / (maxValue - minValue)) * 122}px)`,\r\n        }\"\r\n        class=\"tooltip\"\r\n      >\r\n        {{ value }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<!-- eslint-disable linebreak-style -->\r\n<script>\r\nexport default {\r\n  props: {\r\n    fixedMaxValue: Number,\r\n    fixedMinValue: Number,\r\n    data: Array,\r\n    color: String,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      chartContainerWidth: 0,\r\n      chartContainerHeight: 122,\r\n      minValue: 0,\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.chartContainerWidth = this.$refs.chart.offsetWidth;\r\n    this.chartContainerHeigth = this.$refs.chart.offsetHeight;\r\n    if (this.maxValue !== this.findMax(this.data)) {\r\n      this.minValue = this.findMin(this.data);\r\n    }\r\n  },\r\n  computed: {\r\n    maxValue() {\r\n      return this.fixedMaxValue || Math.max(...this.data.map(({ value }) => value).flat());\r\n    },\r\n\r\n    svgChart() {\r\n      const bars = this.data.map(\r\n        ({ value }) => 50\r\n          - 122 / 200\r\n          - ((value / this.maxValue)\r\n          * (50 - 122 / 100)\r\n          + Math.random() * 0.01),\r\n      );\r\n\r\n      const barWidth = 100 / bars.length;\r\n      const halfBar = barWidth / 2;\r\n\r\n      let path = '';\r\n\r\n      path += `L ${barWidth / 2} ${bars[0]}`;\r\n\r\n      let x = 0;\r\n\r\n      for (let i = 1; i < bars.length; i += 1) {\r\n        if (i === 1) {\r\n          x = barWidth * 1.5;\r\n        } else {\r\n          x += barWidth;\r\n        }\r\n\r\n        path += `C ${x - halfBar} ${bars[i - 1]} ${x - halfBar} ${bars[i]} ${x} ${bars[i]}`;\r\n      }\r\n\r\n      if (bars.length <= 1) {\r\n        x += barWidth / 2;\r\n      }\r\n\r\n      path += `L ${x + halfBar} ${bars[bars.length - 1]}`;\r\n\r\n      const svg = `\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 100 50\" width=\"100%\" height=\"100%\">\r\n          <defs>\r\n            <linearGradient id=\"linear\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n              <stop offset=\"0%\" stop-color=\"${this.color}\" stop-opacity=\"1\" />\r\n            </linearGradient>\r\n          </defs>\r\n\r\n          <g style=\"transform: scaleX(${\r\n  this.chartContainerWidth / ((122 / 50) * 100)\r\n}); transform-origin: center;\">\r\n            <path fill=\"url(#linear1)\" d=\"M0 50 L0 ${String(bars[0]) + path} L100 100Z\" />\r\n            <path fill=\"none\" stroke-width=\"2\" stroke-linecap=\"round\" vector-effect=\"non-scaling-stroke\" stroke=\"url(#linear)\" d=\"M0 ${\r\n  String(bars[0]) + path\r\n}\" />\r\n          </g>\r\n        </svg>\r\n      `;\r\n\r\n      return `url(\"data:image/svg+xml,${encodeURIComponent(svg)}\")`;\r\n    },\r\n  },\r\n  methods: {\r\n    findMax(array) {\r\n      return Math.max(...array.map(({ value }) => value));\r\n    },\r\n    findMin(array) {\r\n      return Math.min(...array.map(({ value }) => value));\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../../../assets/scss/unnnic.scss';\r\n.chart {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-repeat: no-repeat;\r\n  background-size: 100% 100%;\r\n  flex: 1;\r\n  display: flex;\r\n  position: absolute;\r\n  .unnnic-tooltip:hover .bar {\r\n    width: 0;\r\n    height: 100%;\r\n    border-left: 1px dashed $unnnic-color-neutral-dark;\r\n    margin: 0 auto;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .group {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n\r\n    .tooltip {\r\n      display: flex;\r\n      height: 5px;\r\n      color: transparent;\r\n      justify-content: center;\r\n      align-items: flex-end;\r\n      position: relative;\r\n      z-index: 99;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .tooltip:hover {\r\n      display: flex;\r\n      color: $unnnic-color-neutral-dark;\r\n      font-family: $unnnic-font-family-primary;\r\n      justify-content: center;\r\n      align-items: flex-end;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<!-- eslint-disable linebreak-style -->\r\n<template>\r\n  <div :class=\"['unnnic-chart-line', { condensed }]\">\r\n    <div v-if=\"title\" class=\"header\">\r\n      <div class=\"title unnnic-font secondary body-lg color-neutral-dark\">\r\n        {{ title }}\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"main\">\r\n      <div class=\"reference\">\r\n        <div class=\"values\">\r\n          <div\r\n            v-for=\"(value, index) in [value(maxValue), value(maxValue / 2), 0]\"\r\n            :key=\"index + Math.random() * 100\"\r\n            class=\"value unnnic-font secondary body-md color-neutral-cleanest\"\r\n          >\r\n            {{ value }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"unnnic-font secondary body-md color-neutral-cleanest\">&nbsp;</div>\r\n      </div>\r\n\r\n      <div class=\"lines\">\r\n        <div class=\"groups\">\r\n          <div v-for=\"({ data }, index) in data\" :key=\"index + Math.random() * 100\">\r\n            <Lines\r\n              :data=\"data\"\r\n              :fixedMaxValue=\"maxValue\"\r\n              :fixedMinValue=\"minValue\"\r\n              :color=\"colors[index]\"\r\n            />\r\n          </div>\r\n          <div\r\n            v-for=\"n in 3\"\r\n            :key=\"n + Math.random() * 100\"\r\n            class=\"horizontal-line color-neutral-cleanest\"\r\n            :style=\"{ top: `${(n - 1) * ((122 + 67) / 3) - 8}px` }\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"reference_values\">\r\n      <div\r\n        v-for=\"(value, index) in lineData\"\r\n        :key=\"index + Math.random() * 100\"\r\n        class=\"title unnnic-font secondary body-md color-neutral-cleanest\"\r\n      >\r\n        {{ formatValue(value) }}\r\n      </div>\r\n    </div>\r\n    <div class=\"labels\">\r\n      <div\r\n        class=\"label unnnic-font secondary body-lg color-neutral-dark\"\r\n        v-for=\"(chart, index) in data\"\r\n        :key=\"index + Math.random() * 100\"\r\n      >\r\n        <svg\r\n          width=\"15\"\r\n          height=\"6\"\r\n          viewBox=\"0 0 15 6\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <rect width=\"15\" height=\"6\" rx=\"3\" :fill=\"colors[index]\" />\r\n        </svg>\r\n        {{ chart.title }} <strong>{{ findTotals(chart.data) }}</strong>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<!-- eslint-disable linebreak-style -->\r\n<script>\r\nimport Lines from './Line/Line.vue';\r\n\r\nexport default {\r\n  components: {\r\n    Lines,\r\n  },\r\n\r\n  props: {\r\n    condensed: Boolean,\r\n    fixedMaxValue: Number,\r\n    data: Array,\r\n    title: String,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      titles: [],\r\n      colors: [\r\n        '#3182CE',\r\n        '#38A169',\r\n        '#DD6B20',\r\n        '#805AD5',\r\n        '#E53E3E',\r\n        '#00A49F',\r\n        '#D69E2E',\r\n        '#00DED2',\r\n        '#F6AD55',\r\n        '#570074',\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    maxValue() {\r\n      return (\r\n        this.fixedMaxValue || Math.max(...this.data.map(({ data }) => this.findMax(data)).flat())\r\n      );\r\n    },\r\n    minValue() {\r\n      return Math.min(...this.data.map(({ data }) => this.findMin(data)).flat());\r\n    },\r\n    lineData() {\r\n      return this.data[0].data.map((item) => item.title);\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    value(value) {\r\n      if (this.maxValue <= 1) {\r\n        return value.toFixed(1);\r\n      }\r\n\r\n      return String(Math.ceil(value));\r\n    },\r\n    findMax(array) {\r\n      return Math.max(...array.map(({ value }) => value));\r\n    },\r\n    findMin(array) {\r\n      return Math.min(...array.map(({ value }) => value));\r\n    },\r\n    findTotals(array) {\r\n      const values = array.map(({ value }) => value);\r\n      return values.reduce(\r\n        (accumulator, currentValue) => accumulator + currentValue,\r\n        0,\r\n      );\r\n    },\r\n    formatValue(value) {\r\n      return ` ${new Date(value).toLocaleString('default', { month: 'short' })} ${new Date(\r\n        value,\r\n      ).getDate()}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../../assets/scss/unnnic.scss';\r\n\r\n.unnnic-chart-line {\r\n  background-color: $unnnic-color-background-snow;\r\n  border-radius: $unnnic-border-radius-md;\r\n  padding: $unnnic-spacing-inset-md;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: $unnnic-spacing-stack-nano;\r\n  outline-style: solid;\r\n  outline-color: $unnnic-color-neutral-soft;\r\n  outline-width: $unnnic-border-width-thinner;\r\n  outline-offset: -$unnnic-border-width-thinner;\r\n  width: 100%;\r\n  height: 296px;\r\n\r\n  .header {\r\n    display: flex;\r\n    height: 24px;\r\n    width: 100%;\r\n  }\r\n\r\n  .labels {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 80px;\r\n    justify-content: space-between;\r\n    margin: 5px;\r\n  }\r\n\r\n  .titles {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 32px;\r\n    .title {\r\n      flex: 1;\r\n      text-align: center;\r\n    }\r\n  }\r\n  .reference_values {\r\n    display: flex;\r\n    flex-direction: row;\r\n    padding-left: 36px;\r\n    justify-content: space-around;\r\n  }\r\n\r\n  &.condensed {\r\n    padding: $unnnic-spacing-inset-sm;\r\n\r\n    .main .reference {\r\n      margin-right: $unnnic-spacing-inline-sm;\r\n    }\r\n  }\r\n\r\n  .main {\r\n    height: 9.125 * $unnnic-font-size;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .reference {\r\n      display: flex;\r\n      flex-direction: column;\r\n      row-gap: $unnnic-spacing-stack-nano;\r\n      margin-right: $unnnic-spacing-inline-md;\r\n      height: 146px;\r\n      padding-top: 48px;\r\n      align-items: center;\r\n\r\n      .values {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        text-align: right;\r\n        height: 122px;\r\n        width: 12px;\r\n      }\r\n    }\r\n\r\n    .lines {\r\n      width: 100%;\r\n      .groups {\r\n        display: flex;\r\n        flex: 1;\r\n        flex-direction: column;\r\n        row-gap: $unnnic-spacing-stack-nano;\r\n        width: 100%;\r\n        height: 122px;\r\n        position: relative;\r\n\r\n        .unnnic-tooltip:hover .bar {\r\n          width: 0;\r\n          height: 100%;\r\n          border-left: 1px dashed $unnnic-color-neutral-dark;\r\n          margin: 0 auto;\r\n        }\r\n        .horizontal-line {\r\n          width: 100%;\r\n          border-top: 0.5px dashed;\r\n          display: flex;\r\n          flex-direction: column;\r\n          position: absolute;\r\n          transform: translateY(8px);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@each $name, $color in $scheme-colors {\r\n  .color-#{$name} {\r\n    color: $color;\r\n  }\r\n\r\n  .bg-#{$name} {\r\n    background-color: $color;\r\n  }\r\n}\r\n\r\n.unnnic-font {\r\n  font-weight: $unnnic-font-weight-regular;\r\n  font-family: $unnnic-font-family-primary;\r\n\r\n  $font-sizes: 'body-sm' $unnnic-font-size-body-sm, 'body-md' $unnnic-font-size-body-md,\r\n    'body-gt' $unnnic-font-size-body-gt, 'body-lg' $unnnic-font-size-body-lg,\r\n    'title-sm' $unnnic-font-size-title-sm, 'title-md' $unnnic-font-size-title-md,\r\n    'title-lg' $unnnic-font-size-title-lg, 'h4' $unnnic-font-size-h4, 'h3' $unnnic-font-size-h3,\r\n    'h2' $unnnic-font-size-h2, 'h1' $unnnic-font-size-h1;\r\n\r\n  $font-weights: 'black' $unnnic-font-weight-black, 'bold' $unnnic-font-weight-bold,\r\n    'light' $unnnic-font-weight-light;\r\n\r\n  &.secondary {\r\n    font-family: $unnnic-font-family-secondary;\r\n  }\r\n\r\n  @each $name, $size in $font-sizes {\r\n    &.#{$name} {\r\n      font-size: $size;\r\n      line-height: $size + $unnnic-line-height-md;\r\n    }\r\n  }\r\n\r\n  @each $name, $weight in $font-weights {\r\n    &.#{$name} {\r\n      font-weight: $weight;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"names":["_sfc_main","value","bars","barWidth","halfBar","path","x","svg","array","_createElementBlock","$options","_openBlock","_Fragment","_renderList","$props","index","_createElementVNode","_normalizeStyle","$data","Lines","data","item","accumulator","currentValue","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_withScopeId","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_1","_toDisplayString","_createVNode","_component_Lines","n","chart","_hoisted_11","_createTextVNode"],"mappings":"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"}